{"version":3,"sources":["components/ProductItems/style.module.scss","components/ProductItems/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductItem","imgLink","discount_price","price","title","size","quantity","id","increment","decrement","delet","className","style","items__cont","item","description","description_image","src","alt","description_info","description_title","description_size","description_price","old_price","action","type","btn","onClick","recycleBin","count","App","useState","data","setDate","isLoading","setIsLoading","globalCounter","itemPrice","setItemPrice","useEffect","fetch","headers","then","response","json","products","catch","map","e","prevState","post","newDataa","fData","method","body","JSON","stringify","res","newData","guid","filter","elem","key","nanoid","image","choices","field_multichoice","value","preventDefault","result","length","message","from","loc","document","location","href","newWindow","window","open","setTimeout","close","username","assign","slice","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.f4d6a5b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"items__cont\":\"style_items__cont__2A44P\",\"item\":\"style_item__1CILF\",\"description\":\"style_description__2MZFx\",\"description_image\":\"style_description_image__3AFQ9\",\"description_info\":\"style_description_info__3K4Go\",\"description_title\":\"style_description_title__3npL0\",\"description_size\":\"style_description_size__3wC-Q\",\"description_price\":\"style_description_price__2Gqot\",\"old_price\":\"style_old_price__3jaZu\",\"action\":\"style_action__3Ncv3\",\"btn\":\"style_btn__2XZvl\",\"count\":\"style_count__1_cc-\",\"recycleBin\":\"style_recycleBin__3hYDR\"};","import React, { useState, useEffect } from 'react';\nimport style from './style.module.scss';\n\nconst ProductItem = (\n  { imgLink,\n    discount_price,\n    price,\n    title,\n    size,\n    quantity,\n    id,\n    increment,\n    decrement,\n    delet,\n  }\n) => {\n  return (\n    <div className={style.items__cont}>\n      <div className={style.item}>\n        <div className={style.description}>\n          <div className={style.description_image}>\n            <img src={imgLink} alt='image' />\n          </div>\n          <div className={style.description_info}>\n            <div className={style.description_title}>{title}</div>\n            <div className={style.description_size}>Размер: {size}</div>\n            <div className={style.description_price}>\n              <span>{discount_price ? discount_price * quantity : price * quantity} руб.</span>\n              <span className={style.old_price}>{discount_price ? price * quantity + \" руб.\" : null}</span>\n              </div>\n          </div>\n        </div>\n        <div className={style.action}>\n          <button type=\"button\" className={style.btn} onClick={() => delet(id)}><i className={`${style.recycleBin} fa fa-trash-o`}></i></button>\n          <div className={style.count}>{quantity}</div>\n          <button type=\"button\" onClick={() => increment(id)} className={style.btn}>+</button>\n          {quantity !== 1 ? (<button type=\"button\" onClick={() => decrement(id)} className={style.btn}>-</button>) : null}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default ProductItem;","import React, { useEffect, useState } from 'react';\nimport ProductItem from './components/ProductItems';\nimport './App.scss';\nimport { nanoid } from 'nanoid';\n\nfunction App() {\n  const [data, setDate] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [globalCounter, setGlobalCounter] = useState(3);\n  const [itemPrice, setItemPrice] = useState(0);\n  useEffect(() => {\n    setIsLoading(true)\n\n\n    // GET -------\n    fetch('https://designer.fstrk.io/api/partners/chats/84d7967f-3334-4ca3-ae2d-e90d72f11745/variables/', {\n      headers: { 'bot-key': 'c7736d90-a435-4f22-920a-1f5d9ce77fb3' }\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setDate(data['cart-8f23fa09-c277-424a-9604-f5dd1c859bea'].products);\n        setIsLoading(false)\n      })\n      .catch(() => setIsLoading(false))\n  }, [])\n  useEffect(() => {\n    setItemPrice(0)\n    data.map(e => {\n      setItemPrice(prevState => prevState + (e.discount_price * e.quantity))\n    })\n  }, [data])\n  const handleGlobalAdd = () => {\n    setGlobalCounter(globalCounter + 1)\n  }\n\n\n\n\n\n\n  // POST -------\n  const post = (newDataa) => {\n    setDate(newDataa)\n    let fData = {\n      'cart-8f23fa09-c277-424a-9604-f5dd1c859bea': {\n        'products': newDataa,\n      }\n    }\n    fetch(\"https://designer.fstrk.io/api/partners/chats/84d7967f-3334-4ca3-ae2d-e90d72f11745/variables/\", {\n      method: \"POST\",\n      body: JSON.stringify(fData),\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json',\n        'bot-key': 'c7736d90-a435-4f22-920a-1f5d9ce77fb3',\n      },\n    })\n      .then((res) => res)\n  }\n\n\n\n\n\n\n\n  const increment = (id) => {\n    setItemPrice(0)\n    const newData = data.map(e => {\n      return {\n        ...e,\n        quantity: e.guid === id ? e.quantity + 1 : e.quantity\n      }\n    })\n    setDate(newData)\n    post(newData)\n  }\n\n\n\n\n\n  const decrement = (id) => {\n    const newData = data.map(e => {\n      return {\n        ...e,\n        quantity: e.guid === id ? e.quantity - 1 : e.quantity\n      }\n    })\n    post(newData)\n  }\n\n\n\n\n  const delet = (id) => {\n    const newData = data.filter(e => e.guid !== id)\n    setDate(newData)\n    post(newData)\n  }\n\n\n\n\n  const order = (e) => {\n    e.preventDefault();\n    setDate(data)\n    let fData = {\n      'cart-8f23fa09-c277-424a-9604-f5dd1c859bea': {\n        'products': data,\n      }\n    }\n    fetch(\"https://designer.fstrk.io/api/partners/chats/84d7967f-3334-4ca3-ae2d-e90d72f11745/variables/\", {\n      method: \"POST\",\n      body: JSON.stringify(fData),\n      headers: {\n        'Content-type': 'application/json',\n        'Accept': 'application/json',\n        'bot-key': 'c7736d90-a435-4f22-920a-1f5d9ce77fb3',\n      },\n    })\n      .then((res) => res)\n      .then(() => {\n        fetch('https://api.telegram.org/bot1378834776:AAH8vF6I5CkmFKD4e7Z8nY3MpAb3TEq9gzo/getUpdates')\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            return data.result[data.result.length - 1]\n          })\n          .then((data) => {\n            let id = data.message.from.id;\n            let loc = document.location.href;\n            let newWindow = window.open(`https://api.telegram.org/bot1378834776:AAH8vF6I5CkmFKD4e7Z8nY3MpAb3TEq9gzo/sendMessage?chat_id=${id}&text=Данные сохранены! ${loc}`, \"_blank\")\n            return {\n              newWindow,\n              data\n            };\n          })\n          .then(({ newWindow, data }) => {\n            setTimeout(() => {\n              newWindow.close()\n            }, 1000);\n            return data\n          })\n          .then((data) => {\n            let username = data.message.from.username;\n            document.location.assign(`tg://resolve?domain=@${username}`)\n          })\n      })\n  }\n\n\n\n\n  const deleteAll = (id) => {\n    const newData = data.slice(0, 0)\n    post(newData)\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"items__top\">\n        <div className=\"items__basket\">\n          <h3>Корзина {globalCounter}</h3>\n        </div>\n        <div className=\"items__price\">\n          <span className=\"items__price_cont\">{itemPrice} руб.</span>\n        </div>\n      </div>\n      <div className=\"items\">{\n        isLoading ? '...loading' : data\n          .map((elem) => <ProductItem\n            key={nanoid()}\n            id={elem.guid}\n            imgLink={elem.image}\n            price={elem.price}\n            discount_price={elem.discount_price}\n            title={elem.title}\n            quantity={elem.quantity}\n            size={elem.choices.field_multichoice.value}\n            increment={increment}\n            decrement={decrement}\n            delet={delet}\n          />)\n      }</div>\n      <form action=\"#\" className=\"items__boot\">\n        <button className=\"button__add button\" type=\"submit\" onClick={order}>Oформить заказ</button>\n        <button className=\"button\" type=\"submit\" onClick={deleteAll}>Oчистить корзину</button>\n      </form>\n    </div>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}